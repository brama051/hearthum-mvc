
plugins {
    id 'war'
    id 'org.springframework.boot' version '1.5.1.RELEASE'
    id 'com.ag04.annotation-processor' version '0.0.1'
}

jar {
    baseName = 'hearthum-backend'
    version =  '0.1.0'
}

annotationProcessing {
    configurations {
        mapStruct {
            library 'org.mapstruct:mapstruct-processor:1.0.0.Final'
            processor 'org.mapstruct.ap.MappingProcessor'
        }
    }
}

springBoot{
    mainClass = 'com.vabram.hearthum.Application'
}

bootRun{
    addResources = true
}


dependencies {
    compile project(':hearthum-domain')

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework:spring-test:2.5'
    // json
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonDatatypeJoda}"

    // security
    compile 'com.auth0:auth0-spring-security-api:1.0.0-rc.3'

    compile 'org.liquibase:liquibase-core'
    compile 'net.sf.ehcache:ehcache'

    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'

    compile 'javax.servlet:jstl:1.2'

    compile 'org.mapstruct:mapstruct-jdk8:1.0.0.Final'

    runtime "org.postgresql:postgresql:${postgresDriverVersion}"

    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    testCompile 'org.springframework.boot:spring-boot-starter-test'

}

task stage(dependsOn: ['build', 'clean', 'jar'])
build.mustRunAfter clean
jar.mustRunAfter build